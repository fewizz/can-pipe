plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    include(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))
    // modCompileOnly(fabricApi.module("fabric-renderer-indigo", project.fabric_version))

    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))

    modImplementation "blue.endless:jankson:1.2.3"
    include "blue.endless:jankson:1.2.3"
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric')
            ideConfigGenerated(true)
            // loom adds 
            runDir('../run')
            appendProjectPathToConfigName.set(false)
        }
    }
}