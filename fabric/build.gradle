plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
}

repositories {
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    include fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
    modCompileOnly fabricApi.module("fabric-renderer-indigo", fabric_version)

    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation fabricApi.module("fabric-resource-loader-v0", fabric_version)

    modImplementation "blue.endless:jankson:1.2.3"
    include "blue.endless:jankson:1.2.3"

    modImplementation "com.terraformersmc:modmenu:13.0.2"
}

compileJava.source project(":common").sourceSets.main.allSource

loom {
    accessWidenerPath = file("src/main/resources/canpipe.accesswidener")

    runs {
        client {
            client()
            setConfigName('Fabric')
            ideConfigGenerated(true)
            runDir('../run')
            appendProjectPathToConfigName = false
        }
    }
}

base {
    archivesName = mod_id
}

processResources {
    from project(":common").sourceSets.main.resources

    var expandProps = [
        'version'                      : version,
        'group'                        : project.group,
        'minecraft_version'            : minecraft_version,
        'minecraft_version_range'      : minecraft_version_range,
        'mod_name'                     : mod_name,
        'mod_author'                   : mod_author,
        'mod_id'                       : mod_id,
        'license'                      : license,
        'description'                  : project.description,
        'neoforge_version'             : neoforge_version,
        'neoforge_loader_version_range': neoforge_loader_version_range,
        'credits'                      : credits,
        'java_version'                 : java_version
    ]

    filesMatching("fabric.mod.json") {
        expand expandProps
    }
    inputs.properties(expandProps)
}